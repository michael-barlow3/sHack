{
  "name": "vas",
  "version": "1.0.0",
  "description": "VistA Audit Solution",
  "author": "Mike Barlow <michael.barlow3@va.gov>",
  "homepage": "https://github.com/department-of-veterans-affairs/vsra-code#readme",
  "license": "MIT",
  "Comments": "Need to verify what dependencies are actually used and remove ones that aren't",
  "scripts": {
    "subscriber:comment": "Launch Subscriber Service locally",
    "subscriber": "node ./packages/subscriber",
    "subscriber:build": "npm run ds1 && npm run ds2 && npm run ds3",
    "metadata:comment": "Launch MetaData Service locally",
    "metadata": "node ./packages/metadata",
    "metadata:build": "npm run dm1 && npm run dm2 && npm run dm3",
    "gui:dev": "cd packages/GUI && npm run dev",
    "gui:prod": "cd packages/GUI && npm run build",
    "gui:zip": "cd packages/gui/dist && cp -r ../src/assets . && bestzip gui.zip *.ico index.html assets static && mv gui.zip ../../../ENVs/vsr_gui.zip",
    "redshift:comment": "Launch Redshift Service locally",
    "redshift": "node lib/index.js",
    "redshift:build": "babel packages/redshift/src -d packages/redshift/lib",

    "env:zip": "cd ENVs && bestzip envs.zip *.sh",

    "doc": "jsdoc -c jsdoc.conf && jsdoc2md --files packages/utils/*.js > docs/docs.md",
    "test": "nyc mocha \"__tests__/*.test.js\" --timeout 60000 --reporter mochawesome --reporter-options reportDir=reports,reportFilename=test_report,reportTitle=\"VAS_Test_Report\",reportPageTitle=\"VAS-Test-Report\"",
    "lint": "eslint packages/**/*.js __tests__/*.js -f html -o reports/vas_lint_report.html",
    "build:all": "npm run build:subscriber && npm run build:metadata && npm run build:utils",
    "utils:build": "npm run du1 && npm run du2 && npm run du3",
    "clean:dev": "npm install -D nyc eslint eslint-config-airbnb-base eslint-config-prettier eslint-plugin-import eslint-plugin-prettier mocha mochawesome mongodb-memory-server prettier",
    "clean:prod": "npm install ajv chai colors dotenv fs-extra http lodash moment mongodb url yargs chai-json-schema-ajv random-words async-redis",
    "clean:install": "npm run clean:dev && npm run clean:prod && npm run test && npm run lint",
    "dc": "docker-compose up",
    "ds1": "docker build -t subscriber_r2 -f Dockerfile.subscriber .",
    "ds2": "docker tag subscriber_r2 mwbarlow/subscriber_r2:latest",
    "ds3": "npm run dNLogin && docker push mwbarlow/subscriber_r2:latest && docker rmi mwbarlow/subscriber_r2:latest",
    "dm1": "docker build -t metadata_r2 -f Dockerfile.metadata .",
    "dm2": "docker tag metadata_r2 mwbarlow/metadata_r2:latest",
    "dm3": "npm run dNLogin && docker push mwbarlow/metadata_r2:latest && docker rmi mwbarlow/metadata_r2:latest",
    "dm4": "docker run --name metadata -p 8081:8081 --env-file ./.env metadata_r2",
    "du1": "docker build -t utils -f Dockerfile.utils .",
    "du2": "docker tag utils mwbarlow/utils:latest",
    "du3": "npm run dNLogin && docker push mwbarlow/utils:latest && docker rmi mwbarlow/utils:latest",
    "du4": "docker run --name utils --env-file ./.env utils",
    "dLogin": "docker login --username=mwbarlow ",
    "dNLogin": "",
    "fortify": "sourceanalyzer â€‘exclude \"node_modules\" -b utils \"packages/utils/*.js\"",
    "scan": "sonar-scanner.bat -D\"sonar.projectKey=vas\" -D\"sonar.sources=.\" -D\"sonar.host.url=http://localhost:9000\" -D\"sonar.login=df988522d2f26d9a187d897fbd7d3f2bd2f68e78\"",
    "zip": "cd ENVS && bestzip ENVS.zip docker-compose.yml pullMetadata.sh pullSubscriber.sh pullutils.sh pushGUI.sh runme.sh TestEnv4DC.env vsr_gui.zip",
    "api_1_comment": "--- Zip up the first API Gateway function ---",
    "api_1_1": "mkdir build\\subscriber && mkdir build\\AWS && mkdir build\\API",
    "api_1_2": "cp packages/subscriber/subscriber.js build/subscriber && cp ./packages/AWS/s3.js ./build/AWS && cp ./packages/API/how_many.js ./build/API",
    "api_1_3": "cd build && bestzip howmany.zip subscriber AWS API",
    "api_1_4": "npm run api_1_1 && npm run api_1_2 && npm run api_1_3"
  },
  "dockerNotes": {
    "build_meta": "docker build -t packages/metadata -f Dockerfile.metadata ."
  },
  "installNodes": {},
  "repository": {
    "type": "git",
    "url": "git+https://github.com/department-of-veterans-affairs/vsra-code.git"
  },
  "bugs": {
    "url": "https://github.com/department-of-veterans-affairs/vsra-code/issues"
  },
  "devDependencies": {
    "@babel/cli": "^7.11.6",
    "@babel/core": "^7.11.6",
    "@babel/preset-env": "^7.11.5",
    "bestzip": "^2.1.7",
    "eslint": "^7.5.0",
    "eslint-config-airbnb-base": "^14.1.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^3.1.4",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.1",
    "eslint-plugin-vue": "^6.2.2",
    "mocha": "^8.0.1",
    "mochawesome": "^6.1.1",
    "nyc": "^15.0.1",
    "prettier": "^2.0.5",
    "redis-mock": "^0.49.0",
    "sinon": "^9.0.2"
  },
  "dependencies": {
    "ajv": "^6.12.3",
    "async-redis": "^1.1.7",
    "aws-sdk": "^2.720.0",
    "chai": "^4.2.0",
    "chai-datetime": "^1.7.0",
    "chai-json-schema-ajv": "^5.1.0",
    "chalk": "^4.1.0",
    "connect-query": "^1.0.0",
    "dotenv": "^8.2.0",
    "fs-extra": "^9.0.0",
    "html-escaper": "^3.0.0",
    "http": "0.0.1-security",
    "https": "^1.0.0",
    "lodash": "^4.17.19",
    "moment": "^2.27.0",
    "node-machine-id": "^1.1.12",
    "node-redshift": "^0.1.5",
    "random-words": "^1.1.1",
    "restana": "^4.7.2",
    "sql-template-strings": "^2.2.2",
    "url": "^0.11.0",
    "uuid": "^8.2.0",
    "yargs": "^15.4.1"
  },
  "cloneImage": {
    "s1": "docker pull NAME:tag",
    "s2": "docker tag NAME:tag mwbarlow/name:tag",
    "s3": "docker login",
    "s4": "yourname",
    "s5": "password",
    "s6": "docker push mwbarlow/name:tag"
  }
}
